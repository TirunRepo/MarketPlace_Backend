// <auto-generated />
using System;
using MarketPlace.DataAccess.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketPlace.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruiseInventory", b =>
                {
                    b.Property<int>("CruiseInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CruiseInventoryId"));

                    b.Property<int>("AgencyID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CruiseShipId")
                        .HasColumnType("int");

                    b.Property<int>("DeparturePortId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("Nights")
                        .HasColumnType("int");

                    b.Property<string>("PackageDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("SailDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CruiseInventoryId");

                    b.HasIndex("CruiseShipId");

                    b.HasIndex("DeparturePortId");

                    b.HasIndex("DestinationCode");

                    b.ToTable("CruiseInventories");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruiseLine", b =>
                {
                    b.Property<int>("CruiseLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CruiseLineId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CruiseLineCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CruiseLineName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("CruiseLineId");

                    b.ToTable("CruiseLines");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruisePricingCabin", b =>
                {
                    b.Property<int>("CruisePricingCabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CruisePricingCabinId"));

                    b.Property<string>("CabinNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CruisePricingInventoryId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CruisePricingCabinId");

                    b.HasIndex("CruisePricingInventoryId");

                    b.ToTable("CruisePricingCabin");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruisePricingInventory", b =>
                {
                    b.Property<int>("CruisePricingInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CruisePricingInventoryId"));

                    b.Property<string>("CabinCategory")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("CabinOccupancy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CruiseInventoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("DoublePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Grats")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("NCCF")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PriceValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PriceValidTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SinglePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("ThreeFourthPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("CruisePricingInventoryId");

                    b.HasIndex("CruiseInventoryId");

                    b.ToTable("CruisePricingInventories");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruiseShip", b =>
                {
                    b.Property<int>("CruiseShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CruiseShipId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CruiseLineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ShipCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("CruiseShipId");

                    b.HasIndex("CruiseLineId");

                    b.ToTable("CruiseShips");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.DeparturePort", b =>
                {
                    b.Property<int>("DeparturePortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeparturePortId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeparturePortCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeparturePortName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DestinationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("DeparturePortId");

                    b.HasIndex("DestinationCode");

                    b.ToTable("DeparturePorts");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.Destination", b =>
                {
                    b.Property<string>("DestinationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("DestinationCode");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.SailDate", b =>
                {
                    b.Property<int>("SaleDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleDateId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CruiseShipId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("SailDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SaleDateId");

                    b.HasIndex("CruiseShipId");

                    b.ToTable("SailDates");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Markup.MarkupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MarkupPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxBaseFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxMarkup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinBaseFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinMarkup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SailingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MarkupDetail");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Promotions.PromotionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AffiliateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CabinCountRequired")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("DiscountPer")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FreeNthPassenger")
                        .HasColumnType("int");

                    b.Property<bool?>("IncludesAirfare")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncludesHotel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncludesShoreExcursion")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncludesWiFi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdultTicketDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChildTicketDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFirstTimeCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStackable")
                        .HasColumnType("bit");

                    b.Property<string>("LoyaltyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxPassengerAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinNoOfAdultRequired")
                        .HasColumnType("int");

                    b.Property<int?>("MinNoOfChildRequired")
                        .HasColumnType("int");

                    b.Property<int?>("MinPassengerAge")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OnboardCreditAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PassengerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SailingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromotionTypeId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Promotions.PromotionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PromotionType");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruiseInventory", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.CruiseShip", "CruiseShip")
                        .WithMany()
                        .HasForeignKey("CruiseShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.DeparturePort", "DeparturePort")
                        .WithMany()
                        .HasForeignKey("DeparturePortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruiseShip");

                    b.Navigation("DeparturePort");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruisePricingCabin", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.CruisePricingInventory", "CruisePricingInventory")
                        .WithMany("Cabins")
                        .HasForeignKey("CruisePricingInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruisePricingInventory");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruisePricingInventory", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.CruiseInventory", "CruiseInventory")
                        .WithMany()
                        .HasForeignKey("CruiseInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruiseInventory");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruiseShip", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.CruiseLine", "CruiseLine")
                        .WithMany()
                        .HasForeignKey("CruiseLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruiseLine");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.DeparturePort", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.SailDate", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Inventory.CruiseShip", "CruiseShip")
                        .WithMany()
                        .HasForeignKey("CruiseShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruiseShip");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Promotions.PromotionModel", b =>
                {
                    b.HasOne("MarketPlace.DataAccess.Entities.Promotions.PromotionType", "PromotionType")
                        .WithMany()
                        .HasForeignKey("PromotionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromotionType");
                });

            modelBuilder.Entity("MarketPlace.DataAccess.Entities.Inventory.CruisePricingInventory", b =>
                {
                    b.Navigation("Cabins");
                });
#pragma warning restore 612, 618
        }
    }
}
